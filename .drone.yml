kind: pipeline
type: docker
name: default

steps:
  # 의존성 체크 및 린트
  - name: lint-and-check
    image: python:3.11-slim
    commands:
      - pip install --no-cache-dir -r requirements.txt
      - python -m py_compile fastapi_mcp_server.py
      - echo "Build check completed successfully"
    when:
      event:
        - push
        - pull_request
        - custom

  # main/master 브랜치에 push 또는 custom 이벤트 시 도커 이미지 빌드 및 푸시 (멀티 플랫폼)
  - name: build-and-push-branch
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      GITHUB_USERNAME:
        from_secret: github_username
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      # Docker Buildx 설정
      - docker buildx create --use --name multiarch-builder || docker buildx use multiarch-builder
      # GitHub Container Registry 로그인
      - echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin
      # 멀티 플랫폼 빌드 및 푸시
      - |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --tag ghcr.io/jhleee/backlog-mcp-server:latest \
          --tag ghcr.io/jhleee/backlog-mcp-server:commit-${DRONE_COMMIT_SHA:0:8} \
          --tag ghcr.io/jhleee/backlog-mcp-server:${DRONE_BRANCH} \
          --push \
          -f Dockerfile \
          .
    when:
      event:
        - push
        - custom
      branch:
        - master
        - main
    depends_on:
      - lint-and-check

  # 태그 이벤트 발생 시 도커 이미지 빌드 및 푸시 (멀티 플랫폼)
  - name: build-and-push-tag
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      GITHUB_USERNAME:
        from_secret: github_username
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      # Docker Buildx 설정
      - docker buildx create --use --name multiarch-builder || docker buildx use multiarch-builder
      # GitHub Container Registry 로그인
      - echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin
      # 멀티 플랫폼 빌드 및 푸시
      - |
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --tag ghcr.io/jhleee/backlog-mcp-server:${DRONE_TAG} \
          --tag ghcr.io/jhleee/backlog-mcp-server:latest \
          --push \
          -f Dockerfile \
          .
    when:
      event:
        - tag
    depends_on:
      - lint-and-check

# Docker socket 볼륨 설정
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

# 파이프라인 실행 조건
trigger:
  event:
    - push
    - tag
    - pull_request
    - custom
    - promote